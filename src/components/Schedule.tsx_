import {IconNavigationArrow, IconSettings} from "@sberdevices/plasma-icons";
import {Button, Col, Container, DeviceThemeProvider, Image, Row} from "@sberdevices/plasma-ui";
import React from "react";
import {DocStyle, getThemeBackgroundByChar, NAV_PAGE_NO} from "../App";
import logo from "../images/logo.png";
import {getFullGroupName} from "../utils";
import HeaderSchedule from "./HeaderSchedule";
import HomeWeekChange from "./HomeWeekChange";
import ScheduleCarousel from "./ScheduleCarousel";
import ScheduleDayFull from "./ScheduleDayFull";
import StarButtonView from "./StarButtonView";

const Raspisanie = ({
                      timeParam,
                      weekParam,
                    }:
                      {
                        timeParam: number,
                        weekParam: number,
                      }) => {
  // this.setState({i: 0});
  const current = this.getCurrentLesson(new Date(Date.now()));
  const day_num = timeParam - 1;
  const index = timeParam;
  const page = weekParam === 1 ? 8 : 0;
  const groupName = getFullGroupName(this.state.group, this.state.subGroup);

  return (
    <DeviceThemeProvider>
      <DocStyle/>
      {
        getThemeBackgroundByChar(this.state.character)
      }
      <div>
        <Container style={{padding: 0, overflow: "hidden"}}>

          <Row style={{margin: "1em"}}>

            <Col style={{maxWidth: '3rem'}}>
              <Image src={logo} ratio="1 / 1"/>
            </Col>

            <HeaderSchedule
              label={
                !this.state.student && this.state.teacher_correct
                  ? this.state.teacher
                  : groupName
              }
            />

            <Col style={{margin: "0 0 0 auto"}}>
              <Button
                size="s"
                view="clear"
                pin="circle-circle"
                onClick={() => this.setState({page: NAV_PAGE_NO})}
                contentRight={
                  <IconNavigationArrow size="s" color="inherit"/>
                }
              />
              {
                this.isTeacher()
                  ? (
                    <StarButtonView
                      star={this.state.star}
                      student={this.state.student}
                      userId={this.state.userId}
                      groupId={this.state.groupId}
                      subGroup={this.state.subGroup}
                      engGroup={this.state.engGroup}
                      teacherId={this.state.teacherId}
                      teacher_star={this.state.teacher_star}
                      setValue={this.setValue}
                      onClick={this.setValue("teacher_star", !this.state.teacher_star)}
                    />
                  ) : (
                    <StarButtonView
                      star={this.state.star}
                      student={this.state.student}
                      userId={this.state.userId}
                      groupId={this.state.groupId}
                      subGroup={this.state.subGroup}
                      engGroup={this.state.engGroup}
                      teacherId={this.state.teacherId}
                      teacher_star={this.state.teacher_star}
                      setValue={this.setValue}
                      onClick={this.setValue("star", !this.state.star)}
                    />
                  )}
              <Button
                size="s"
                view="clear"
                pin="circle-circle"
                onClick={() => this.setState({page: 0})}
                contentRight={
                  <IconSettings size="s" color="inherit"/>
                }
              />

              {/* <Button size="s" view="clear" pin="circle-circle" onClick={()=>this.setState({ page: 16 })}  contentRight={<IconHouse size="s" color="inherit"/>} /> */}
            </Col>
          </Row>

          <HomeWeekChange
            onPrevWeekClick={() => {
              this.setState({spinner: false});
              this.PreviousWeek();
              this.setState({page: 9})
            }}
            onThisWeekClick={() => {
              console.log(199)
              this.setState({date: Date.now()});
              this.setState({date: Date.now(), flag: true, page: 7})
            }}
            onNextWeekClick={() => {
              this.setState({spinner: false});
              this.NextWeek();
              this.setState({page: 9})
            }}
          />

          <ScheduleCarousel
            i={this.state.i}
            index={index}
            onIndexChange={() => this.Index()}
            onSetValue={this.setValue}
            day={this.state.day}
            page={page}
            weekParam={weekParam}
            today={this.state.today}
          />

          <ScheduleDayFull
            spinner={this.state.spinner}
            days={this.state.days}
            day_num={day_num}
            current={current}
            weekParam={weekParam}
            timeParam={timeParam}
            student={this.state.student}
            teacher_correct={this.state.teacher_correct}
            today={this.state.today}
            isCorrectTeacher={this.isCorrectTeacher}
            onSetValue={this.setValue}
          />

          <MyDiv200/>

        </Container>
      </div>
    </DeviceThemeProvider>
  );
}
